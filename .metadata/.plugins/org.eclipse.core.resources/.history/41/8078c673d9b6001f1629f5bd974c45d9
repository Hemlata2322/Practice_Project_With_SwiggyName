package swiggyTestPages;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.nio.file.Path;
import java.nio.file.Paths;

import org.apache.commons.io.FileUtils;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.By;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.Select;
import org.testng.annotations.*;

import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.ExtentTest;
import com.aventstack.extentreports.reporter.ExtentSparkReporter;

public class signupUsingExcelExtentScreenshot {
	
	WebDriver driver;
	ExtentReports extent;
	ExtentSparkReporter spark;
	ExtentTest test;
	TakesScreenshot screenshot;
	
	@BeforeClass
	public void setup() throws IOException
	{
		System.setProperty("webdriver.chrome.driver", "./Driver/chromedriver.exe");
		driver = new ChromeDriver();
		driver.manage().window().maximize();
		
		extent = new ExtentReports();
		String file = Paths.get(System.getProperty("user.dir") + "./TestReports/signupReport.html").toString();
		spark = new ExtentSparkReporter(file);
		extent.attachReporter(spark);	
		
	}
	
	@Test(dataProvider = "readData")
	public void validateSignup(String firstName, String lastName, String email)
	{
		test = extent.createTest("Validating Signup Functionality");
		test.info("Login to facebook website");
		driver.get("http://www.facebook.com/");
		test.info("Switching to signup page");
		driver.findElement(By.xpath("//a[text() = 'Create new account']")).click();
		test.info("Entering first name");
		driver.findElement(By.name("firstname")).sendKeys(firstName);
		test.info("Entering last name");
		driver.findElement(By.name("lastname")).sendKeys(lastName);
		test.info("Selecting the date of birth");
		Select daySelect = new Select(driver.findElement(By.id("day")));
		daySelect.selectByVisibleText("9");
		Select monthSelect = new Select(driver.findElement(By.id("month")));
		monthSelect.selectByVisibleText("Dec");
		Select yearSelect = new Select(driver.findElement(By.id("year")));
		yearSelect.selectByVisibleText("2017");		
		test.info("Selecting the gender as Female");
		driver.findElement(By.xpath("//label[text() = 'Female']/child::input[@id = 'sex']")).click();
		test.info("Entering email address");
		driver.findElement(By.name("reg_email__")).sendKeys(email);
		test.info("Entering new password");
	//	driver.findElement(By.id("password_step_input")).sendKeys("");
		test.addScreenCaptureFromPath(captureScreenshot().toString(), "ErrorOnNewPassword");
		test.info("clicking on Sign Up");
		driver.findElement(By.xpath("//button[text() = 'Sign Up' and @name = 'websubmit']")).click();	
		
	}

	
	@DataProvider
	public Object[][] readData() throws IOException
	{
		
		File testDataFile = new File("./TestData/TestData.xlsx");
		FileInputStream fis = new FileInputStream(testDataFile);
		XSSFWorkbook wk = new XSSFWorkbook(fis);
		XSSFSheet sh = wk.getSheet("SignUpTestData");
		
		Object[][] arr = new Object[1][3];
		arr[0][0] = sh.getRow(3).getCell(0).getStringCellValue();
		arr[0][1] = sh.getRow(3).getCell(1).getStringCellValue();
		arr[0][2] = sh.getRow(3).getCell(2).getStringCellValue();
		wk.close();
		return arr;
		
	}
	
	@AfterMethod
	public String captureScreenshot() 
	{
		try
		{
		screenshot = (TakesScreenshot)driver;
		File srcFile = screenshot.getScreenshotAs(OutputType.FILE);
		String screenshotPath = "./Screenshots/signupScreenshot.png";
		File desFile = new File(screenshotPath);
		FileUtils.copyFile(srcFile, desFile);
		return screenshotPath;
		}
		catch(Exception e)
		{
			test.fail("Unable to capture screenshot due to " + e.getMessage());
		}
		return null;
	}
	@AfterClass
	public void tearDown()
	{
		driver.quit();
		extent.flush();
	}

}
